{"ast":null,"code":"var _jsxFileName = \"/Users/meowmeow/development/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport InfoTooltip from './InfoTooltip';\nimport Login from './Login';\nimport Register from './Register';\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\nimport success from \"../images/success.svg\";\nimport fail from \"../images/fail.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [email, setEmail] = React.useState('');\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isInfoPopupOpen, setIsInfoPopupOpen] = React.useState(false);\n  const [infoPopupStatus, setInfoPopupStatus] = React.useState({\n    path: '',\n    text: ''\n  });\n  const [selectedCard, setSelectedCard] = React.useState({\n    name: '',\n    link: ''\n  });\n  const [cards, setCards] = React.useState([]);\n  const history = useHistory();\n  React.useEffect(() => {\n    api.getUserData().then(data => {\n      setCurrentUser(data);\n    }).catch(err => console.log(err));\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.getContent(jwt).then(res => {\n        setIsLoggedIn(true);\n        setEmail(res.data.email);\n        history.push('/');\n      }).catch(err => console.log(err));\n    }\n  }, [history]); // <---------- Registration & Auth ---------->\n\n  function registration(email, password) {\n    auth.register(email, password).then(response => {\n      if (response.ok) {\n        changeInfoPopup({\n          statusPath: success,\n          statusText: 'Вы успешно зарегистрировались!'\n        });\n        setIsInfoPopupOpen(true);\n        return response.json();\n      }\n    }).catch(err => {\n      changeInfoPopup({\n        statusPath: fail,\n        statusText: 'Что-то пошло не так! Попробуйте ещё раз.'\n      });\n      setIsInfoPopupOpen(true);\n      console.log(err);\n    });\n  }\n\n  function authorization(email, password) {\n    auth.authorize(email, password).then(data => {\n      if (!data) {\n        throw new Error('Произошла ошибка');\n      }\n\n      auth.getContent(data).then(res => {\n        setEmail(res.data.email);\n      });\n      setIsLoggedIn(true);\n    });\n  } // <---------- Open & Close ---------->\n\n\n  function changeInfoPopup({\n    statusPath,\n    statusText\n  }) {\n    setInfoPopupStatus({\n      path: statusPath,\n      text: statusText\n    });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsInfoPopupOpen(false);\n    setSelectedCard({\n      name: '',\n      link: ''\n    });\n  } // <---------- Update User & Avatar ---------->\n\n\n  function handleUpdateUser({\n    name,\n    about\n  }) {\n    api.editProfile(name, about).then(data => {\n      setCurrentUser(data);\n      setIsEditProfilePopupOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleUpdateAvatar({\n    avatar\n  }) {\n    api.changeAvatar(avatar).then(data => {\n      setCurrentUser(data);\n      setIsEditAvatarPopupOpen(false);\n    }).catch(err => console.log(err));\n  } // <---------- PhotoCards Actions ---------->\n\n\n  function handleAddPlaceSubmit(card) {\n    api.addCard(card.name, card.link).then(newCard => {\n      setCards([newCard, ...cards]);\n      setIsAddPlacePopupOpen(false);\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    const changeLike = isLiked ? api.deleteLike(card._id) : api.setLike(card._id);\n    changeLike.then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCard = cards.filter(c => c._id !== card._id);\n      setCards(newCard);\n    }).catch(err => console.log(err));\n  }\n\n  function handleCardClick(selectedCard) {\n    setSelectedCard({\n      name: selectedCard.name,\n      link: selectedCard.link\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        isLoggedIn: isLoggedIn,\n        email: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            authorization: authorization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            registration: registration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          isLoggedIn: isLoggedIn,\n          render: () => /*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            cards: cards\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isOpen: isInfoPopupOpen,\n        isLoggedIn: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"VxPeEzqxFF8GdRzVIP9em3Va1A4=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/meowmeow/development/react-mesto-auth/src/components/App.js"],"names":["React","Route","Switch","Redirect","useHistory","Header","Main","Footer","ImagePopup","EditAvatarPopup","EditProfilePopup","AddPlacePopup","InfoTooltip","Login","Register","api","auth","CurrentUserContext","ProtectedRoute","App","isLoggedIn","setIsLoggedIn","useState","currentUser","setCurrentUser","email","setEmail","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isInfoPopupOpen","setIsInfoPopupOpen","infoPopupStatus","setInfoPopupStatus","path","text","selectedCard","setSelectedCard","name","link","cards","setCards","history","useEffect","getUserData","then","data","catch","err","console","log","getInitialCards","jwt","localStorage","getItem","getContent","res","push","registration","password","register","response","ok","changeInfoPopup","statusPath","success","statusText","json","fail","authorization","authorize","Error","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","closeAllPopups","handleUpdateUser","about","editProfile","handleUpdateAvatar","avatar","changeAvatar","handleAddPlaceSubmit","card","addCard","newCard","handleCardLike","isLiked","likes","some","i","_id","changeLike","deleteLike","setLike","state","map","c","handleCardDelete","deleteCard","filter","handleCardClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, Redirect, useHistory } from 'react-router-dom';\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport InfoTooltip from './InfoTooltip';\n\nimport Login from './Login';\nimport Register from './Register';\n\nimport api from '../utils/api';\nimport * as auth from '../utils/auth';\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport ProtectedRoute from './ProtectedRoute';\n\nimport success from '../images/success.svg';\nimport fail from '../images/fail.svg';\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [email, setEmail] = React.useState('');\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n    const [isInfoPopupOpen, setIsInfoPopupOpen] = React.useState(false);\n    const [infoPopupStatus, setInfoPopupStatus] = React.useState({ path: '', text: '' })\n\n    const [selectedCard, setSelectedCard] = React.useState({ name: '', link: '' });\n    const [cards, setCards] = React.useState([]);\n\n    const history = useHistory();\n\n\n    React.useEffect(() => {\n        api.getUserData()\n            .then((data) => {\n                setCurrentUser(data);\n            })\n            .catch((err) => console.log(err));\n    }, [])\n\n    React.useEffect(() => {\n        api.getInitialCards()\n            .then((cards) => {\n                setCards(cards);\n            })\n            .catch((err) => {\n                console.log(err);\n            })\n\n    }, [])\n\n    React.useEffect(() => {\n        const jwt = localStorage.getItem('jwt');\n        if (jwt) {\n            auth.getContent(jwt)\n                .then((res) => {\n                    setIsLoggedIn(true);\n\n                    setEmail(res.data.email);\n\n                    history.push('/');\n                })\n                .catch(err => console.log(err))\n        }\n    }, [history])\n\n\n    // <---------- Registration & Auth ---------->\n\n    function registration(email, password) {\n        auth.register(email, password)\n            .then((response) => {\n                if (response.ok) {\n                    changeInfoPopup({\n                        statusPath: success,\n                        statusText: 'Вы успешно зарегистрировались!',\n                    })\n\n                    setIsInfoPopupOpen(true);\n\n                    return response.json();\n                }\n            })\n            .catch((err) => {\n                changeInfoPopup({\n                    statusPath: fail,\n                    statusText: 'Что-то пошло не так! Попробуйте ещё раз.',\n                })\n\n                setIsInfoPopupOpen(true);\n\n                console.log(err);\n            })\n    }\n\n    function authorization(email, password) {\n        auth.authorize(email, password)\n            .then((data) => {\n                if (!data) {\n                    throw new Error('Произошла ошибка');\n                }\n\n                auth.getContent(data)\n                    .then((res) => {\n                        setEmail(res.data.email);\n                    })\n                \n                setIsLoggedIn(true);    \n            })\n    }\n\n\n    // <---------- Open & Close ---------->\n\n    function changeInfoPopup({ statusPath, statusText }) {\n        setInfoPopupStatus({\n            path: statusPath,\n            text: statusText\n        })\n    }\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsInfoPopupOpen(false);\n\n        setSelectedCard({ name: '', link: '' });\n    }\n\n\n    // <---------- Update User & Avatar ---------->\n\n    function handleUpdateUser({ name, about }) {\n        api.editProfile(name, about)\n            .then((data) => {\n                setCurrentUser(data);\n                setIsEditProfilePopupOpen(false);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }\n\n    function handleUpdateAvatar({ avatar }) {\n        api.changeAvatar(avatar)\n            .then((data) => {\n                setCurrentUser(data);\n                setIsEditAvatarPopupOpen(false);\n            })\n            .catch((err) => console.log(err));\n    }\n\n\n    // <---------- PhotoCards Actions ---------->\n\n    function handleAddPlaceSubmit(card) {\n        api.addCard(card.name, card.link)\n            .then((newCard) => {\n                setCards([newCard, ...cards]);\n                setIsAddPlacePopupOpen(false);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleCardLike(card) {\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        const changeLike = isLiked ? api.deleteLike(card._id) : api.setLike(card._id)\n\n        changeLike.then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n            .catch((err) => console.log(err));\n    }\n\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                const newCard = cards.filter((c) => c._id !== card._id);\n                setCards(newCard);\n            })\n            .catch((err) => console.log(err));\n    }\n\n    function handleCardClick(selectedCard) {\n        setSelectedCard({ name: selectedCard.name, link: selectedCard.link });\n    }\n\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n            <div className=\"root\">\n                <Header\n                isLoggedIn={isLoggedIn}\n                email={email} />\n\n                <Switch>\n                    <Route path=\"/sign-in\">\n                        <Login authorization={authorization} />\n                    </Route>\n\n                    <Route path=\"/sign-up\">\n                        <Register registration={registration} />\n                    </Route>\n\n                    <ProtectedRoute\n                        exact path=\"/\"\n                        isLoggedIn={isLoggedIn}\n\n                        render={() =>\n                            <Main\n                                onEditAvatar={handleEditAvatarClick}\n                                onEditProfile={handleEditProfileClick}\n                                onAddPlace={handleAddPlaceClick}\n\n                                onCardClick={handleCardClick}\n                                onCardLike={handleCardLike}\n                                onCardDelete={handleCardDelete}\n\n                                cards={cards}\n                            />\n                        }\n                    />\n                    <Route exact path=\"/\">\n                        {isLoggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n                    </Route>\n                </Switch>\n\n                <EditAvatarPopup\n                    isOpen={isEditAvatarPopupOpen}\n                    onClose={closeAllPopups}\n\n                    onUpdateAvatar={handleUpdateAvatar}\n                />\n\n                <EditProfilePopup\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n\n                    onUpdateUser={handleUpdateUser}\n                />\n\n                <AddPlacePopup\n                    isOpen={isAddPlacePopupOpen}\n                    onClose={closeAllPopups}\n\n                    onAddPlace={handleAddPlaceSubmit}\n                />\n\n                <ImagePopup\n                    card={selectedCard}\n                    onClose={closeAllPopups}\n                />\n\n                <InfoTooltip\n                    isOpen={isInfoPopupOpen}\n                    \n                    isLoggedIn\n                />\n                <Footer />\n\n            </div>\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}