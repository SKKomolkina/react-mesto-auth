{"ast":null,"code":"import _classCallCheck from\"/Users/meowmeow/development/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/meowmeow/development/react-mesto-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";export var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.baseUrl;this._headers=options.headers;}_createClass(Api,[{key:\"getData\",value:function getData(){return Promise.all([this.getUserData(),this.getInitialCards()]);}},{key:\"getInitialCards\",value:function getInitialCards(){var _this=this;return fetch(\"\".concat(this._url,\"/cards\"),{headers:this._headers}).then(function(res){return _this._checkResult(res);});}},{key:\"getUserData\",value:function getUserData(){var _this2=this;return fetch(\"\".concat(this._url,\"/users/me\"),{headers:this._headers}).then(function(res){return _this2._checkResult(res);});}},{key:\"editProfile\",value:function editProfile(name,about){var _this3=this;return fetch(\"\".concat(this._url,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:name,about:about})}).then(function(res){return _this3._checkResult(res);});}},{key:\"addCard\",value:function addCard(name,link){var _this4=this;return fetch(\"\".concat(this._url,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:name,link:link})}).then(function(res){return _this4._checkResult(res);});}},{key:\"setLike\",value:function setLike(cardId){var _this5=this;return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:'PUT',headers:this._headers}).then(function(res){return _this5._checkResult(res);});}},{key:\"deleteLike\",value:function deleteLike(cardId){var _this6=this;return fetch(\"\".concat(this._url,\"/cards/likes/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(function(res){return _this6._checkResult(res);});}},{key:\"deleteCard\",value:function deleteCard(cardId){var _this7=this;return fetch(\"\".concat(this._url,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(function(res){return _this7._checkResult(res);});}},{key:\"changeAvatar\",value:function changeAvatar(avatarUrl){var _this8=this;return fetch(\"\".concat(this._url,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:avatarUrl})}).then(function(res){return _this8._checkResult(res);});}},{key:\"_checkResult\",value:function _checkResult(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));}}]);return Api;}();var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-25',headers:{authorization:'e0ccb70a-8300-4fff-b1a9-1044a866d1c7','Content-Type':'application/json'}});export default api;","map":{"version":3,"sources":["/Users/meowmeow/development/react-mesto-auth/src/utils/api.js"],"names":["Api","options","_url","baseUrl","_headers","headers","Promise","all","getUserData","getInitialCards","fetch","then","res","_checkResult","name","about","method","body","JSON","stringify","link","cardId","avatarUrl","avatar","ok","json","reject","status","api","authorization"],"mappings":"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","sourcesContent":["export class Api {\n    constructor(options) {\n        this._url = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    getData() {\n        return Promise.all([this.getUserData(), this.getInitialCards()]);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            headers: this._headers\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    getUserData() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    editProfile(name, about) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about,\n            })\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    addCard(name, link) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                link: link,\n            })\n        })\n            .then(res => this._checkResult(res))\n    }\n\n    setLike(cardId) {\n        return fetch(`${this._url}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._url}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    changeAvatar(avatarUrl) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: avatarUrl,\n            })\n        })\n            .then(res => this._checkResult(res));\n    }\n\n\n    _checkResult(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n    headers: {\n        authorization: 'e0ccb70a-8300-4fff-b1a9-1044a866d1c7',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api"]},"metadata":{},"sourceType":"module"}