{"ast":null,"code":"export class Api {\n  constructor(options) {\n    this._url = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  getData() {\n    return Promise.all([this.getUserData(), this.getInitialCards()]);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._url}/cards`, {\n      headers: this._headers\n    }).then(res => this._checkResult(res));\n  }\n\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      headers: this._headers\n    }).then(res => this._checkResult(res));\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._url}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => this._checkResult(res));\n  }\n\n  addCard(name, link) {\n    return fetch(`${this._url}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => this._checkResult(res));\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this._checkResult(res));\n  }\n\n  deleteLike(cardId) {\n    return fetch(`${this._url}/cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._checkResult(res));\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._checkResult(res));\n  }\n\n  changeAvatar(avatarUrl) {\n    return fetch(`${this._url}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarUrl\n      })\n    }).then(res => this._checkResult(res));\n  }\n\n  _checkResult(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n  headers: {\n    authorization: 'e0ccb70a-8300-4fff-b1a9-1044a866d1c7',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/meowmeow/development/mesto-react/src/utils/api.js"],"names":["Api","constructor","options","_url","baseUrl","_headers","headers","getData","Promise","all","getUserData","getInitialCards","fetch","then","res","_checkResult","editProfile","name","about","method","body","JSON","stringify","addCard","link","setLike","cardId","deleteLike","deleteCard","changeAvatar","avatarUrl","avatar","ok","json","reject","status","api","authorization"],"mappings":"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","sourcesContent":["export class Api {\n    constructor(options) {\n        this._url = options.baseUrl;\n        this._headers = options.headers;\n    }\n\n    getData() {\n        return Promise.all([this.getUserData(), this.getInitialCards()]);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            headers: this._headers\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    getUserData() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    editProfile(name, about) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                about: about,\n            })\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    addCard(name, link) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: name,\n                link: link,\n            })\n        })\n            .then(res => this._checkResult(res))\n    }\n\n    setLike(cardId) {\n        return fetch(`${this._url}/cards/likes/${cardId}`, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    deleteLike(cardId) {\n        return fetch(`${this._url}/cards/likes/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then(res => this._checkResult(res));\n    }\n\n    changeAvatar(avatarUrl) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: avatarUrl,\n            })\n        })\n            .then(res => this._checkResult(res));\n    }\n\n\n    _checkResult(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\n    headers: {\n        authorization: 'e0ccb70a-8300-4fff-b1a9-1044a866d1c7',\n        'Content-Type': 'application/json'\n    }\n});\n\nexport default api"]},"metadata":{},"sourceType":"module"}